name: Publish
env:
  USER_EMAIL: ${{ secrets.LIBRARY_USER_EMAIL }}
  USER_NAME: ${{ secrets.LIBRARY_USER_NAME }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
on:
  pull_request:
    types:
      - closed
    branches:
      - dev
jobs:
  publish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # - name: Set Git Config
      #   run: |
      #     git config --global user.email ${USER_EMAIL}
      #     git config --global user.name ${USER_NAME}
      #   env:
      #     GITHUB_TOKEN: ${GITHUB_TOKEN}
      #     GH_TOKEN: ${GITHUB_TOKEN}

      - name: Use NodeJS 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: Install Dependencies
        run: |
          npx lerna bootstrap
      
      - name: "Version and publish" # publish package
        env:
          GH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ ${{ github.base_ref }} = next ]; then
            npx lerna version --conventional-commits --conventional-graduate --yes
            npx lerna publish from-git --dist-tag next --yes
          elif [ ${{ github.base_ref }} = beta ]; then
            npx lerna version --conventional-commits --conventional-prerelease --preid beta --yes
            npx lerna publish from-git --pre-dist-tag beta  --yes
          elif [ ${{ github.base_ref }} = alpha ]; then
            npx lerna version --conventional-commits --conventional-prerelease --preid alpha --yes
            npx lerna publish from-git --pre-dist-tag alpha  --yes
          else
            npx lerna version --conventional-commits --conventional-graduate --yes
            npx lerna publish from-git --yes
          fi

      # - name: Run build
      #   run: |
      #     npx lerna run build

      # - name: Version Bump
      #   run: |
      #     npx lerna version --conventional-commits --conventional-graduate --yes

      # - name: Publish Packages
      #   run: |
      #     npx lerna publish from-package --yes
      #   env:
      #     NODE_AUTH_TOKEN: ${NPM_TOKEN}
